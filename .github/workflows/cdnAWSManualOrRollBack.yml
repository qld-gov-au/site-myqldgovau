name: Deploy CDN (manual/rollback)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'DEV'
        type: choice
        options:
          - DEV
          - TEST
          - STAGING
          - PROD
      dryRun:
        description: 'Dry Run deployment (set to false to deploy)'
        required: true
        type: boolean
        default: true

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment }} Environment
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}
      url: ${{ steps.version.outputs.url }}
    concurrency:
      group: ${{ github.event.inputs.environment }}-deployments
      cancel-in-progress: false

    permissions:
      id-token: write #Needed for AWS role switch
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      - name: Install #run on lint step (Which is cached)
        run: | # Install packages
          npm install --prefer-offline --no-audit --ignore-scripts

      - name: rebuild and prepare
        run: npm rebuild && npm run prepare --if-present

      - name: Lint
        run: |
          npm run lint

      - name: Test
        run: |
          npm run test

      - name: Build ðŸ”§
        run: | # build the files
          npm run build

      - name: Get Git Tag or Package.json Version
        id: version
        run: bash -x ./.github/workflows/getVersionDetails.sh {{  github.event.inputs.environment }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ap-southeast-2

      - name: Save root directory
        run: echo "REPO_ROOT=$(pwd)" >> $GITHUB_ENV

      - name: Copy Environment Config for {{  github.event.inputs.environment }}
        run: |
          bash -x .github/workflows/setupEnvironmentConfig.sh ${{ env.REPO_ROOT }} {{  github.event.inputs.environment }}

      - name: Deploy
        run: |
          bash -x ./.github/workflows/awsDeploy.sh repo_root=${{ env.REPO_ROOT }} s3bucket="${{ secrets.S3BUCKET }}" \
            version=${{ env.version }} dry_run=${{  github.event.inputs.dryRun }} domain="${{ steps.version.outputs.url }}"

      - uses: actions/upload-artifact@v4.3.1
        with:
          name: Package
          path: ./dist